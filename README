               ------------------------------------------------
                  HERAFITTER   --- PDF fit program from HERA.
               ------------------------------------------------

HERAFITTER has been used as one of the main software packages for the
determination of the HERAPDF1.0 set proton parton densities. HERAPDF
is a common initiative by the H1 and ZEUS collaborations and extended
now to the LHC collaborations to provide
precision QCD analyses.

The current package includes code to fit DIS inclusive cross section 
data, Drell-Yan and jet processes (using APPLGRID and FastNLO
interfaces). The program is distributed under the GPL v3 license, see
LICENCE file for more details. The program was developed by the H1
collaboration. It uses the QCD evolution package QCDNUM developed by
M. Botje. Parts of the code were contributed by non H1 members:
-- VFNS from R. Thorne, G. Watt (MSTW)
-- VFNS from F. Olness (ACOT)
-- FFNS from S. Alekhin (ABM)
-- DY LO+k-factor calculation from A. Sapronov
-- PDF error estimation from J. Pumplin
-- DIS electroweak corrections from H. Spiesberger with Jegerlehner's 
   hadronic parametric contribution (based on e+,e- data)
-- NNPDF reweighting tool from A. Guffanti (NNPDF)
-- DIPOLE models (GBW, IIM, BGS)

If the results obtained with the program are to be included in a scientific 
publication, please use the citations as suggested by the REFERENCES file. 

For support information, please visit https://herafitter.org/HERAFitter

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

                 Installation and Usage Instructions


0) Pre-requirements.
====================

-- GNU automake tools. Currently tested with autoreconf version 2.59 and newer

-- QCDNUM version at least qcdnum-17-00/04, can be found at 
  http://mbotje.web.cern.ch/mbotje/qcdnum/Site/QCDNUM17.html

-- CERNLIB. Note that for CERNLIB one can use /afs/ installation from CERN:
  /afs/cern.ch/sw/lcg/external/cernlib/

-- Link to recent Root libraries (e.g. version 5.26)

-- Optional: APPLGRID

-- HERAfitter has been tested on various platforms: 
   SL4, SL5 (32 and 64 bit),  Ubuntu 10.10, MacOXS

1) INSTALLATION (without APPLGRID)
====================================

  a) Specify CERN_ROOT and QCDNUM_ROOT environment variables such that 
     $CERN_ROOT/lib  and $QCDNUM_ROOT/lib point to the corresponding libraries
     ( e.g. export CERN_ROOT=/afs/cern.ch/sw/lcg/external/cernlib/2006a/x86_64-slc5-gcc43-opt)

  b) Run:

    autoreconf --install
    ./configure
    make 
    make install

    --> you should get bin/FitPDF executable file installed

  c) Run a check

    bin/FitPDF 

  d) Storing of the outputs: output/
	- minuit.out.txt  			(minuit output)
	- Results.txt 				(chiquare and the systematic shifts)
	- lhapdf.block.txt			(ready to use LHAPDF style grids, run tools/tolhapdf.cmd)
	- fittedresults.txt			(theory predictions for each fitted data point)
	- pulls.first/last.txt			(pulls at the start and end of the fit)
	- pdfs_q2val_0i.txt, i=1, user defined  (PDF sets atpredefined Q2 values, as set in the steering.txt)	


1B) INSTALLATION (with APPLGRID)
=================================

  a) Specify CERN_ROOT and QCDNUM_ROOT variables such that 
     $CERN_ROOT/lib  and $QCDNUM_ROOT/lib point to the corresponding libraries

     Install APPLGRID version 1.1.6 or later. Description can be found at
         http://projects.hepforge.org/applgrid/

  b) Run:

    autoreconf --install
    ./configure --enable-applgrid
    make 
    make install

    --> you should get bin/FitPDF executable file installed

  c) Run a check

    bin/FitPDF 


1C) INSTALLATION (with Hathor)
=================================

  a) Download Hathor from http://www-zeuthen.desy.de/~moch/hathor/
     and install it according to the instructions given there
     (requires LHAPDF library)

  b) Define a variable HATHOR_ROOT such that $HATHOR_ROOT points to the
     directory of your Hathor installation

  c) Install the HERAFitter as described above but configuring it
     with the option "--enable-hathor" before building it

1D) INSTALLATION with LHAPDF 
============================================
  a) include lhapdf-config in your PATH variable
	(e.g. export PATH=/your/path/to/lhapdf/bin)
  b) include libLHAPDF.so library in your LD_LIBRARY_PATH variable
	(e.g. export LD_LIBRARY_PATH=/your/path/to/lhapdf/lib)
  c) enable the lhapdf in the configure: ./configure --enable-lhapdf

The lhapdf will be used if you change  PDFStyle = 'LHAPDF' in the steering card.


1E) INSTALLATION with NNPDF reweighting tool
============================================
	- needs linking to LHAPDF 
	README located in ./NNPDF directory



1F) Modules such as 
 - DIPOLE
 - DiffDIS (Diffractive DIS)  
 - DY (LO)
 - heavy flavour schemes RT, ACOT, ABM 

can be ran with simple INSTALLATION procedure as described above.
Their activation is possible through the input steerings in the 
steering.txt (use appropriate cards for that!)



2) MINI DESCRIPTION
=====================
  a) Steering cards
--------------------
    The software behaviour is controlled by two files with steering commands.
    These files have predefined names:

      steering.txt   --  controls main "stable" (un-modified during 
                         minimisation) parameters. The file also contains
                         names of data files to be fitted to, definition 
                         of kinematic cuts                        
                        
      minuit.in.txt  --  controls minimisation parameters and minimisation 
                         strategy. Standard Minuit commands can be provided
                         in this file

      ewparam.txt    --  controls electroweak parameters.


  b) Inclusion of data files
-------------------------------
    Inclusion of the data files is controlled by &InFiles namelist in the 
    steering.txt file. For example, by default the following four HERA-I
    files are included:

&InFiles
    NInputFiles = 4
    InputFileNames(1) = 'datafiles/H1ZEUS_NC_e-p_HERA1.0.dat'
    InputFileNames(2) = 'datafiles/H1ZEUS_NC_e+p_HERA1.0.dat'
    InputFileNames(3) = 'datafiles/H1ZEUS_CC_e-p_HERA1.0.dat'
    InputFileNames(4) = 'datafiles/H1ZEUS_CC_e+p_HERA1.0.dat'
&End

    To include more files:
       -- Increase NInputFiles
       -- Specify  InputFileNames()



  c) Data files format 
--------------------------

   Experimental data are provided by the standard ASCII text files. The files
   contain a "header" which describes the data format and the "data" in terms
   of a 2-dimensional table. Each line of the data table corresponds to a
   data point, the meaning of the columns is specified in the file header.

   For example, a header for HERA-I combined H1-ZEUS data for e+p neutral 
   current scattering cross section is given in the file

       datafiles/H1ZEUS_NC_e-p_HERA1.0.dat

   The format of the file follows standard "namelist" conventions. Comments 
   start with exclamation mark.  Pre-defined variables are:

      Name        --- (string) provides a name of the data set

      Reaction    --- (string) reaction type of the data set. Reaction type is used 
                      to trigger corresponding theory calculation. The following 
                      reaction types  are currently supported by the HERAFitter:
                        'NC e+-p'  -- double differential NC ep scattering
                                      (ZMVFS and RT-VFS) 
                        'CC e+-p'  -- double differential CC ep scattering
                                      (ZMVFS)
                        'CC pp'    -- single differential d sigma (W^{+,-})/d eta
                                      production and W asymmetry at pp and ppbar 
                                      colliders (LO+kfactors and APPLGRID interface)
                        'NC pp'    -- single differential d sigma Z/d y_Z at pp and
                                      ppbar colliders
                                      (LO+kfactors and APPLGRID interface)

                        'pp jets APPLGRID' -- pp->inclusive jet production, using
                                     APPLGRID 

                        'FastNLO ep jets' -- ep jets calculated with the help of
                                     fastnlo v.2.0 table
                        'FastNLO ep jets normalised' -- fastnlo ep jets normalised
                                     to inclusive DIS cross section

                        

      NData       --- (integer) specifies number of data points in the file. 
                     This corresponds to the number of table rows which 
                     follow after the header.

      NColumn     --- (integer) number of columns in the data table.

      ColumnType  --- (array of strings)
                      Defines layout of the data table. The following column types
                      are pre-defined: 'Bin', 'Sigma', 'Error' and 'Dummy'
                      The keywords are case sensitive. 'Bin' correspond to an
                      abstract bin definition, 'Sigma' corresponds to the data
                      measurement, 'Error' - to various type of uncertainties and
                      'Dummy' indicates that the column should be ignored.

      ColumnName  --- (array of strings)
                      Defines names of the columns. The meaning of the name depends
                      on the ColumnType. For ColumnType 'Bin', ColumnName gives a
                      name of the abstract bin. The abstract bins can contain
                      any variable names, but some of them must be present for 
                      correct cross section calculation. For example, 'x', 'Q2' and
                      'y' are required for DIS NC cross-section calculation.
 
                      For ColumnType 'Sigma', ColumnName provides a label for 
                      the observable, which can be any string.
 
                      For ColumnType 'Error', the following names have special meaning:
                       'stat'  -- specifies column with statistical uncertainties
                       'uncor' -- specifies column with uncorrelated uncertainties  
                       'total' -- specifies column with total uncertainties. 
                                  Total uncertainties are not used in the fit,
                                  however there is an additional check is performed
                                  if 'total' column is specified: sum in quadrature
                                  of statistical, uncorrelated and correlated 
                                  systematic uncertainties is compared to the total
                                  and a warning is issued if they differ significantly.
                       'ignore' - specifies column to be ignored (for special studies).
                      Other names specifies columns of correlated systematic 
                      uncertainty. For a given data file, each column of the correlated
                      uncertainty must have unique name. To specify correlation across
                      data files, same name must be used for different files.  
                       
      SystScales  --- (array of float)
                      For special studies, systematic uncertainties can be scaled
                      The numbering of uncertainties starts from the first column
                      with the ColumnType 'Error'. For example, setting 

                           SystScale(1) = 2.  

                      in datafiles/H1ZEUS_NC_e-p_HERA1.0.dat would scale stat. 
                      uncertainty by factor of two.
                       

      Percent     --- (array of bool) For each uncertainty specify if it is given in 
                      absolute ("false") or in percent ("true").  The numbering of 
                      uncertainties starts from the first column with the 
                      ColumnType 'Error' (see example above).

      NInfo       --- (integer) Calculation of the cross-section predictions may 
                      require  additional information about the data set. The number of 
                      information strings is given by NInfo

      CInfo       --- (array of strings) Names of the information strings. 
                      Several of them are predefined for different cross-section 
                      calculations.
 
      DataInfo    --- (array of float) Values, corresponding to CInfo names.

      IndexDataset -- (integer) Internal H1 Fitter index of the data set. Provide unique
                      numbers to get extra info for chi2/dof for each data set.
      
      TheoryInfoFile --- (string) Optional additional theory file with extra 
                     information for cross-section calculation. This could be k-factors,
                     APPLGRID file or FastNLO table.
  
      TheoryType --- (string) Theory file type ('kfactor', 'applgrid' or 'FastNLO')
      
      NKFactor   --- (integer) For kfactor files, number of columns in
                     TheoryInfoFile

      KFactorNames - (array of strings) For kfactor files, names of columns in 
                     TheoryInfoFile



  c.a) FastNLO specific data format
-----------------------------------

  In this subsection we describe data format specific for FastNLO implementation.
  The program included FastNLOReader for the new format tables (v. 2.0+). The old
  FastNLO table format can be still accessed with the help of APPLGRID (this is not
  tested in the HERAFitter enviroment though). The reader supports both flexible
  and non-flexible scales tables. For flexible tables, scales can be defined
  through the CInfo mechanism in the data file. Below more details on different
  data file variables are given.

      Reaction - for the fastnlo jet cross sections this should be 'FastNLO ep jets'
  or 'FastNLO ep jets normalised'. The latter refers to jet cross sections normalised
  to inclusive DIS cross sections (definition of the normalisation phase space needs
  to be done for each data point, see the 'ColumnName' field).

      ColumnName - There are some specific names that are recognised internally by
  the code:
         'Z0Corr': Allows to inform the program of the size of the Z0 exchange correction.
                 If it is given, each point calculated by the FastNLO code will be
                 multiplied by the Z0Corr value.
         'NPCorr': Allows to inform the program of the size of the non-perturbative correction.
                 If it is given, each point calculated by the FastNLO code will be
                 multiplied by the NPCorr value. Z0Corr and NPCorr can be added 
                 simultaneously, and in this case the calculated cross sections
                 will be multiplied by the product of (Z0Corr*NPCorr).
         'q2min', 'q2max', 'ymin', 'ymax', 'xmin', 'xmax': These can be used to define 
                 DIS phase space for the normalisation used in the 'FastNLO ep jets normalised'
                 case. Out of these three (q2, y, x) exactly two sets should be defined
                 to inambiguisly define the DIS phase space.
         
      CInfo, DataInfo - Following info fields are required to calculated desired cross sections
                 (some can be ommited for 'FastNLO ep jets normalised' case):

         'PublicationUnits': Output of the FastNLO code can be given in units used in 
                 the relevant publication table or in a standarized units. To use 
                 publication units one needs to set PublicationUnits to 1. In order
                 to use absolute units, it needs to be set to 0.

         'MurDef', 'MufDef': Here user can define the scale definition used by
                 the FastNLO code for variable scale tables. The renormalisation
                 scale (MurDef) and factorisation scale (MufDef) definitions
                 can be set independently. The required value follows 
                 the FastNLO standard and should be equal to :
                    0 :   mu^2 = Q^2 
                    1 :   mu^2 = pt^2 
                    2 :   mu^2 = ( Q^2 + pt^2 )
                    3 :   mu^2 = ( Q^2 + pt^2 ) / 2 
                    4 :   mu^2 = ( Q^2 + pt^2 ) / 4 
                    5 :   mu^2 = (( Q + pt ) / 2 )^2
                    6 :   mu^2 = (( Q + pt ))^2
                    7 :   mu^2 = max( Q^2, pt^2)
                    8 :   mu^2 = min( Q^2, pt^2) 
                    9 :   mu^2 = (scale1 * exp(0.3 * scale2)) ^2

         'lumi(e-)/lumi(tot)': This needs to be defined for 'FastNLO ep jets normalised'
                 option. The normalisation depends on the ratio of the e+ and e- data 
                 used to calculate the cross sections. This ratio should rather be
                 given in a format (lumi{e-} / (lumi{e-} + lumi{e+}) and assume
                 values between [0. 1.].

         'UseZMVFNS': Should be defined for 'FastNLO ep jets normalised'. The calculation
                 of the integrated inclusive DIS cross sections could be time consuming.
                 This option provides an opportunity to use a "Zero Mass Variable Flavour
                 Number Scheme" approximation which is very fast and possibly provides
                 enough precision for the normalisation purposes. ZMVNS is used if 'UseZMVFNS'=1. 
                 If 'UseZMVFNS'=0., the same scheme as defined in a global steering.txt file
                 in the variable 'HF_SCHEME'

      TheoryInfoFile - Should be a path to a FastNLO table in a version 2.0+
      TheoryType -  Should be set to 'FastNLO'


  d) Minuit cards
--------------------------

  The minuit card contains the list of parameters used in the fits.
  The default card (minuit.in.txt) located in the trunk is linked to the 
  STANDARD PARAMETRISATION form as used for HERAPDF1.0 (10 free parameters).
  	

  STANDARD PARAMETRISATION has the form: 
  A * x**B * (1 - x)**C * (1 + D *x + E * x**2 + F * x**3) - Ap * x**Bp * (1 - x)**Cp   


  and it parametrises the following PDFs: 
  uval, dval, Ubar(=ubar+cbar), Dbar(=dbar+sbar), gluon
 

 Other options for minuit cards are stored in the input_steering/: 
	- CTEQ minuit card
	- CHEBYSHEV minuit card: uval, dval, Sea(=Ubar+Dbar), gluon
	- H1PDF200 : U,D,Ubar,Dbar

  The following options can be selected from the steering.ttx  with a predefined string:
	
  PDFStyle = '10p HERAPDF'

 ! PDF parameterisation style. Possible styles are currently available:
 !  '10p HERAPDF' -- HERAPDF-like with extra assumption Buv = Bdv
 !  '13p HERAPDF' -- HERAPDF-like with Buv and Bdv floated independently
 !  '10p H12000'  -- H12000-like (D,U,Dbar,Ubar+g)
 !  'CTEQ'        -- CTEQ-like parameterisation
 !  'CHEB'        -- CHEBYSHEV parameterisation based on glu,sea, uval,dval evolved pdfs
 !  'LHAPDFQ0'    -- use lhapdf library to define pdfs at starting scale and evolve with local qcdnum parameters
 !  'LHAPDF'      -- use lhapdf library to define pdfs at all scales
 !  'DDIS'        -- use Diffractive DIS 


IMPORTANT:
   Make sure that choosen minuit.in.txt corresponds to your selection in the steering.txt


Explanation of the minuit.in.txt format:  


set title
new  13p HERAPDF
parameters
   1    'Ag'                       0.0000      0.
   2    'Bg'                      -0.226958    1.126400e-03
.....

-  The first 3 lines set title and announces MINUIT the list of parameters	
-  The index of parameters is the first column and it is hardwired to the source code.

1 -10 gluon parameters     
11-20 uval  parameters
21-30 dval  parameters
31-40 Ubar  parameters
41-50 Dbar  parameters
51-60 U     parameters
61-70 D     parameters
71-80 Sea   parameters
81-90 Delta parameters
91-100 other parameters: alphas (95), fs=Dbar/str (96), fc=Ubar/ch (97)


- second column represents just user defined names 
- third column: input value for the parameter
- forth column: step size  (usually chosen of the same order as of the error)
	IMPORTANT:
	-> if step size value is 0. then this parameter is FIXED
- fifth colum: lower boundary of the fit parameter
- sixth column: upper boundary of the fit parameter
	-> if boundaries are not mentioned then there are no boundaries!


Only parameters that have the step size non-zero are let to vary in the fit (free parameters)
Another way to fix the parameters is simply by typing at the end of the 
list of parameters (make sure there is one line free between):

FIX 96 --> this one fixes parameter 96

Commands taken by minuit:
call fcn 3  ->  fit is not performed, only 1 iteration, useful for testing
		Minuit parameters ARE NOT minimized

migrad 	     -> fit is performed (default number of calls 2000).
migrad 20000 -> fit is performed up to 20000 calls, then terminates.
hesse	     -> hessian estimate of the MINUIT parameters (more reliable than MINUIT)



- The output of the fit is stored in the output/ directory: minuit.out.txt

  Statements to watch in minuit.out.txt:
  FCN=   575.16     -> this is total chisquare
  FROM MIGRAD   STATUS=CONVERGED  -> this is desirable for a fit that converged
  FCN=   575.16     FROM HESSE     STATUS=OK  --> this is desirable for a fit that converged 
 						  and errors estimated with HESSE method
  EDM=  0.12E-04    STRATEGY= 1      ERROR MATRIX ACCURATE 



  e) Applying cuts
--------------------------
  The namelist &Cuts, located inside the steering.txt file can be used to apply
  simple process dependent cuts. The cuts are limitted to bin variables.
  Simple low and high limits are allowed. For example, a cut on Q2>3.5 for
  NC ep scattering is specified as

  ! Rule #1: Q2 cuts
   ProcessName(1)     = 'NC e+-p'
   Variable(1)        = 'Q2'
   CutValueMin(1)     = 3.5 
   CutValueMax(1)     = 1000000.0

  Maximum 100 cuts can be used by default.


  f) Choosing the heavy flavour scheme
--------------------------
  Several schemes are available for heavy quarks:

  -VFNS (Variable Flavour Number Schemes):
     RT-VFS                                 [from Robert Thorne]
     ZMVFNS                                 [qcdnum]   
     ACOT (ACOT-Full, ACOT-ZM, S-ACOT-Chi)  [from Fred Olness]

  -FFNS (Fixed Flavour Number Scheme)       [qcdnum]
   also available in ABM (openqcdrad-1.6)   [from Sergey Alekhin]
      
  IMPORTANT if running with FFNS (nf=3): 
  - only neutral current DIS data should be used in FF scheme due to missing NLO 
    coefficient functions in charged current (W+c) process, valence quarks 
    in this case should to be fixed in minuit.in.txt file
    In FF ABM implementation the charged current coefficients are available
    therefore valence parameters do not need to be fixed
  - alpha_s(Q2) in FFNS is 3-flavour and recommended to be set to value of 0.105 
    such that is not too high at low energies
  - the scale in FFNS is defined as mu^2 = Q^2 + 4m_h^2 by default, can be 
    changed in HQScale in steering.txt (scale variation in ABM not yet implemented)
  - the pole mass definition for heavy quarks is set in ABM by default, 
    the running mass definition (arXiv:1011.5790v1) can be switched in 
    by setting HF_SCHEME = 'FF ABM RUNM' in steering.txt 


  g) Understanding the output
------------------------------
  The results of the minimization are printed to the standard output and written
  to the files in the output/ directory. 

  The quality of the fit can be judged based on total chi2 per degrees of freedom.
  It is printed for each iteration as 
                      Iteration   Chi2   NDF       Chi2/NDF
   FitPDF f,ndf,f/ndf      3      588.64 579        1.02
together with PDFs:
uv:    3.7171    0.6656    4.6522    0.0000    9.6938    0.0000    0.0000    0.0000    0.0000    0.0000
dv:    2.1893    0.6656    4.2914    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000
Ub:    0.1122   -0.1651    2.5820    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000
Db:    0.1626   -0.1651    2.4048    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000
GL:    6.7729    0.2138    9.0138    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000
ST:    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000    0.0000

  The resulting chi2 is reported for each data set and for correlated 
  systematic uncertainties separately. This information is printed and written
  to the output/Results.txt file. The Results.txt file contains additional 
  information about shifts of the correlated systematic uncertainties.

  The minimization information from the minuit is stored in the output/minuit.out.txt
  file. The verboseness level of this information can be changed by minuit commands
  in the minuit.in.txt file. Make sure that the minuit does not report any errors
  or warnings at the end of minimisation.
  
  Point by point comparison of the data and predictions after the minimization 
  is provided in output/fittedresults.txt file. The file reports three columns
  corresponding to three first bins of the input tables, data value, sum in 
  quadrature of statistical and uncorrelated systematic uncertainty, total
  uncertainty, the predicted value, after applying correlated systematic shifts,
  pull between data and theory (calculated as (data-theory)/uncorrelated_error),
  data set index. Similar information is stored in pulls.first.txt and pulls.last.txt
  ( dataset index, first bin, second bin, third bin, data, theory, pull), however
  theory is not adjusted for systematic error shifts in this case.

  The output PDFs are stored in forms of tables in output/pdfs_q2val_XX.txt files.
  Each of the files reports values of gluon, and quark PDFs as a function of x
  for fixed Q^2 points. The Q^2 values and x grid are specified by 
  &Output namelist in the steering.txt
  
  The PDF information and data to theory comparisons can be plotted using 
  the bin/DrawResults program.  Calling it without arguments plots results from
  output/ directory. Given the program one argument specifies sub-directory 
  where the information is read. Calling the bin/DrawResults program with two
  arguments provides comparison of the PDFs obtained in the two fits.
  
  Finally, the HERAFitter package provides PDFs in LHAPDF format. To obtain the
  LHAPDF grid file, run tools/tolhapdf.cmd script. The script produces 
  PDFs.LHgrid file which can be read by lhapdf version  lhapdf-5.8.6.tar.gz
  or later

