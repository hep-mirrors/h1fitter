------------------------------------------------
    H1FITTER   --- PDF fit program from HERA.
------------------------------------------------

(for support info, see https://znwiki3.ifh.de/H1Fitter)


0) Pre-requirements.
====================

-- QCDNUM version at least qcdnum-17-00/04, can be found at 
  http://mbotje.web.cern.ch/mbotje/qcdnum/Site/QCDNUM17.html

-- CERNLIB. Note that for CERNLIB one can use /afs/ installation from CERN:
  /afs/cern.ch/sw/lcg/external/cernlib/

-- Link to recent Root libraries (e.g. version 5.26)

-- Optional: APPLGRID

-- h1fitter has been tested on various platforms: 
   SL4, SL5 (32 and 64 bit),  Ubuntu 10.10,  [ MAC-OS(X) ??]

1) INSTALLATION (without APPLGRID)
====================================

  a) Specify CERN_ROOT and QCDNUM_ROOT variables such that 
     $CERN_ROOT/lib  and $QCDNUM_ROOT/lib point to the corresponding libraries

  b) Run:

    autoreconf --install
    ./configure
    make 
    make install

    --> you should get bin/FitPDF executable file installed

  c) Run a check

    bin/FitPDF < steering.txt

1B) INSTALLATION (with APPLGRID)
=================================

  a) Specify CERN_ROOT and QCDNUM_ROOT variables such that 
     $CERN_ROOT/lib  and $QCDNUM_ROOT/lib point to the corresponding libraries

     Install APPLGRID version 1.1.6 or later. Description can be found at
     
  b) Run:

    autoreconf --install
    ./configure
    make 
    make install

    --> you should get bin/FitPDF executable file installed

  c) Run a check

    bin/FitPDF 


2) MINI DESCRIPTION
=====================
  a) Steering cards
--------------------
    The software behaviour is controlled by two files with steering commands.
    These files have predefined names:

      steering.txt   --  controls main "stable" (un-modified during 
                         minimisation) parameters. The file also contains
                         names of data files to be fitted to, definition 
                         of kinematic cuts                        
                        
      minuit.in.txt  --  controls minimisation parameters and minimisation 
                         strategy. Standard Minuit commands can be provided
                         in this file

      ewparam.txt    --  controls electroweak parameters.


  b) Inclusion of data files
-------------------------------
    Inclusion of the data files is controlled by &InFiles namelist in the 
    steering.txt file. For example, by default the following four HERA-I
    files are included:

&InFiles
    NInputFiles = 4
    InputFileNames(1) = 'datafiles/H1ZEUS_NC_e-p_HERA1.0.dat'
    InputFileNames(2) = 'datafiles/H1ZEUS_NC_e+p_HERA1.0.dat'
    InputFileNames(3) = 'datafiles/H1ZEUS_CC_e-p_HERA1.0.dat'
    InputFileNames(4) = 'datafiles/H1ZEUS_CC_e+p_HERA1.0.dat'
&End

    To include more files:
       -- Increase NInputFiles
       -- Specify  InputFileNames()



  c) Data files format 
--------------------------

   Experimental data are provided by the standard ASCII text files. The files
   contain a "header" which describes the data format and the "data" in terms
   of a 2-dimensional table. Each line of the data table corresponds to a
   data point, the meaning of the columns is specified in the file header.

   For example, a header for HERA-I combined H1-ZEUS data for e+p neutral 
   current scattering cross section is given in the file

       datafiles/H1ZEUS_NC_e-p_HERA1.0.dat

   The format of the file follows standard "namelist" conventions. Comments 
   start with exclamation mark.  Pre-defined variables are:

      Name        --- (string) provides a name of the data set

      Reaction    --- (string) reaction type of the data set. Reaction type is used 
                      to trigger corresponding theory calculation. The following 
                      reaction types  are currently supported by the H1Fitter:
                        'NC e+-p'  -- double differential NC ep scattering
                                      (ZMVFS and RT-VFS) 
                        'CC e+-p'  -- double differential CC ep scattering
                                      (ZMVFS)
                        'CC pp'    -- single differential d sigma (W^{+,-})/d eta
                                      production and W asymmetry at pp and ppbar 
                                      colliders (LO+kfactors and APPLGRID interface)
                        'NC pp'    -- single differential d sigma Z/d y_Z at pp and
                                      ppbar colliders
                                      (LO+kfactors and APPLGRID interface)

                        'pp jets APPLGRID' -- pp->inclusive jet production, using
                                     APPLGRID

                        

      NData       --- (integer) specifies number of data points in the file. 
                     This corresponds to the number of table rows which 
                     follow after the header.

      NColumn     --- (integer) number of columns in the data table.

      ColumnType  --- (array of strings)
                      Defines layout of the data table. The following column types
                      are pre-defined: 'Bin', 'Sigma', 'Error' and 'Dummy'
                      The keywords are case sensitive. 'Bin' correspond to an
                      abstract bin definition, 'Sigma' corresponds to the data
                      measurement, 'Error' - to various type of uncertainties and
                      'Dummy' indicates that the column should be ignored.

      ColumnName  --- (array of strings)
                      Defines names of the columns. The meaning of the name depends
                      on the ColumnType. For ColumnType 'Bin', ColumnName gives a
                      name of the abstract bin. The abstract bins can contain
                      any variable names, but some of them must be present for 
                      correct cross section calculation. For example, 'x', 'Q2' and
                      'y' are required for DIS NC cross-section calculation.
 
                      For ColumnType 'Sigma', ColumnName provides a label for 
                      the observable, which can be any string.
 
                      For ColumnType 'Error', the following names have special meaning:
                       'stat'  -- specifies column with statistical uncertainties
                       'uncor' -- specifies column with uncorrelated uncertainties  
                       'total' -- specifies column with total uncertainties. 
                                  Total uncertainties are not used in the fit,
                                  however there is an additional check is performed
                                  if 'total' column is specified: sum in quadrature
                                  of statistical, uncorrelated and correlated 
                                  systematic uncertainties is compared to the total
                                  and a warning is issued if they differ significantly.
                       'ignore' - specifies column to be ignored (for special studies).
                      Other names specifies columns of correlated systematic 
                      uncertainty. For a given data file, each column of the correlated
                      uncertainty must have unique name. To specify correlation across
                      data files, same name must be used for different files.  
                       
      SystScales  --- (array of float)
                      For special studies, systematic uncertainties can be scaled
                      The numbering of uncertainties starts from the first column
                      with the ColumnType 'Error'. For example, setting 

                           SystScale(1) = 2.  

                      in datafiles/H1ZEUS_NC_e-p_HERA1.0.dat would scale stat. 
                      uncertainty by factor of two.
                       

      Percent     --- (array of bool) For each uncertainty specify if it is given in 
                      absolute ("false") or in percent ("true").  The numbering of 
                      uncertainties starts from the first column with the 
                      ColumnType 'Error' (see example above).

      NInfo       --- (integer) Calculation of the cross-section predictions may 
                      require  additional information about the data set. The number of 
                      information strings is given by NInfo

      CInfo       --- (array of strings) Names of the information strings. 
                      Several of them are predefined for different cross-section 
                      calculations.
 
      DataInfo    --- (array of float) Values, corresponding to CInfo names.

      IndexDataset -- (integer) Internal H1 Fitter index of the data set. Provide unique
                      numbers to get extra info for chi2/dof for each data set.
      
      TheoryInfoFile --- (string) Optional additional theory file with extra 
                     information for cross-section calculation. This could be k-factors,
                     APPLGRID file or FastNLO table.
  
      TheoryType --- (string) Theory file type ('kfactor', 'applgrid' or 'fastnlo')
      
      NKFactor   --- (integer) For kfactor files, number of columns in
                     TheoryInfoFile

      KFactorNames - (array of strings) For kfactor files, names of columns in 
                     TheoryInfoFile

  d) Minuit cards
--------------------------

  The minuit card contains the list of parameters used in the fits.
  The default card (minuit.in.txt) located in the trunk is linked to the 
  STANDARD PARAMETRISATION form as used for HERAPDF1.0 (10 free parameters).
  	

  STANDARD PARAMETRISATION has the form: 
  A * x**B * (1 - x)**C * (1 + D *x + E * x**2 + F * x**3) - Ap * x**Bp * (1 - x)**Cp   


  and it parametrises the following PDFs: 
  uval, dval, Ubar(=ubar+cbar), Dbar(=dbar+sbar), gluon
 

 Other options for minuit cards are stored in the input_steering/: 
	- CTEQ minuit card
	- CHEBYSHEV minuit card: uval, dval, Sea(=Ubar+Dbar), gluon
	- H1PDF200 : U,D,Ubar,Dbar

  The following options can be selected from the steering.ttx  with a predefined string:
	
  PDFStyle = '10p HERAPDF'

 ! PDF parameterisation style. Possible styles are currently available:
 !  '10p HERAPDF' -- HERAPDF-like with extra assumption Buv = Bdv
 !  '13p HERAPDF' -- HERAPDF-like with Buv and Bdv floated independently
 !  '10p H12000'  -- H12000-like (D,U,Dbar,Ubar+g)
 !  'CTEQ'        -- CTEQ-like parameterisation
 !  'CHEB'        -- CHEBYSHEV parameterisation based on glu,sea, uval,dval evolved pdfs

IMPORTANT:
   Make sure that choosen minuit.in.txt corresponds to your selection in the steering.txt


Explanation of the minuit.in.txt format:  


set title
new  13p HERAPDF
parameters
   1    'Ag'                       0.0000      0.
   2    'Bg'                      -0.226958    1.126400e-03
.....

-  The first 3 lines set title and announces MINUIT the list of parameters	
-  The index of parameters is the first column and it is hardwired to the source code.

1 -10 gluon parameters     
11-20 uval  parameters
21-30 dval  parameters
31-40 Ubar  parameters
41-50 Dbar  parameters
51-60 U     parameters
61-70 D     parameters
71-80 Sea   parameters
81-90 Delta parameters
91-100 other parameters: alphas (95), fs=Dbar/str (96), fc=Ubar/ch (97)


- second column represents just user defined names 
- third column: input value for the parameter
- forth column: step size  (usually chosen of the same order as of the error)
	IMPORTANT:
	-> if step size value is 0. then this parameter is FIXED
- fifth colum: lower boundary of the fit parameter
- sixth column: upper boundary of the fit parameter
	-> if boundaries are not mentioned then there are no boundaries!


Only parameters that have the step size non-zero are let to vary in the fit (free parameters)
Another way to fix the parameters is simply by typing at the end of the 
list of parameters (make sure there is one line free between):

FIX 96 --> this one fixes parameter 96

Commands taken by minuit:
call fcn 3  ->  fit is not performed, only 1 iteration, useful for testing
		Minuit parameters ARE NOT minimized

migrad 	     -> fit is performed (default number of calls 2000).
migrad 20000 -> fit is performed up to 20000 calls, then terminates.
hesse	     -> hessian estimate of the MINUIT parameters (more reliable than MINUIT)



- The output of the fit is stored in the output/ directory: minuit.out.txt

  Statements to watch in minuit.out.txt:
  FCN=   588.64     -> this is total chisquare
  FROM MIGRAD   STATUS=CONVERGED  -> this is desirable for a fit that converged
  FCN=   588.64     FROM HESSE     STATUS=OK  --> this is desirable for a fit that converged 
 						  and errors estimated with HESSE method
  EDM=  0.12E-04    STRATEGY= 1      ERROR MATRIX ACCURATE 



  e) Applying cuts
--------------------------
  The namelist &Cuts, located inside the steering.txt file can be used to apply
  simple process dependent cuts. The cuts are limitted to bin variables.
  Simple low and high limits are allowed. For example, a cut on Q2>3.5 for
  NC ep scattering is specified as

  ! Rule #1: Q2 cuts
   ProcessName(1)     = 'NC e+-p'
   Variable(1)        = 'Q2'
   CutValueMin(1)     = 3.5 
   CutValueMax(1)     = 1000000.0

  Maximum 100 cuts can be used by default.

  f) Understanding the output
------------------------------
  The results of the minimization are printed to the standard output and written
  to the files in the output/ directory. 

  The quality of the fit can be judged based on total chi2 per degrees of freedom.
  It is printed for each iteration as 
                      Iteration   Chi2   NDF       Chi2/NDF
   FitPDF f,ndf,f/ndf      3      588.64 579        1.02
  
  The resulting chi2 is reported for each data set and for correlated 
  systematic uncertainties separately. This information is printed and written
  to the output/Results.txt file. The Results.txt file contains additional 
  information about shifts of the correlated systematic uncertainties.

  The minimization information from the minuit is stored in the output/minuit.out.txt
  file. The verboseness level of this information can be changed by minuit commands
  in the minuit.in.txt file. Make sure that the minuit does not report any errors
  or warnings at the end of minimisation.
  
  Point by point comparison of the data and predictions after the minimization 
  is provided in output/fittedresults.txt file. The file reports three columns
  corresponding to three first bins of the input tables, data value, sum in 
  quadrature of statistical and uncorrelated systematic uncertainty, total
  uncertainty, the predicted value, after applying correlated systematic shifts,
  pull between data and theory (calculated as (data-theory)/uncorrelated_error),
  data set index. Similar information is stored in pulls.first.txt and pulls.last.txt
  ( dataset index, first bin, second bin, third bin, data, theory, pull), however
  theory is not adjusted for systematic error shifts in this case.

  The output PDFs are stored in forms of tables in output/pdfs_q2val_XX.txt files.
  Each of the files reports values of gluon, and quark PDFs as a function of x
  for fixed Q^2 points. The Q^2 values and x grid are specified by 
  &Output namelist in the steering.txt
  
  The PDF information and data to theory comparisons can be plotted using 
  the bin/DrawResults program.  Calling it without arguments plots results from
  output/ directory. Given the program one argument specifies sub-directory 
  where the information is read. Calling the bin/DrawResults program with two
  arguments provides comparison of the PDFs obtained in the two fits.
  
  Finally, the H1Fitter package provides PDFs in LHAPDF format. To obtain the
  LHAPDF grid file, run tools/tolhapdf.cmd script. The script produces 
  PDFs.LHgrid file which can be read by lhapdf version  lhapdf-5.8.6.tar.gz
  or later

